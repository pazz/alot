0.21

* avoid traceback infos from getting written on top of the ui
* new "--help" output, autogenerated manpage
* version string extracted from git for cli option "--version"
* command line subcommands: compose and search
* properly display multiple headers with the same key
* envelope.set option "--append"
* more detailed CUSTOMIZE docs
* multiple fixes for the envelope buffer
* exit on closing of last buffer is now optional
* die gracefully when config parsing fails
* rendom bugfixes in the ui
* external command lins as lists of strings instead of strings
* errbacks and correct calling of post-hooks for deferred commands
* envelope.headers stores lists of values for each key now

0.20

* extensive API docs
* fancy shortening for authors list
* moved default location for config to ~/.config/alot/config
* message templates
* hooks for pre/post editing and RE/FWD quotestrings
* recipient completion gives priority to abook of sender account
* smarter in-string-tab completion
* added ability to pipe messages/treads to custom shell commands
* initial command configurable in config file
* non-blocking prompt/choice (new syntax for prompts!)
* usage help for every command
* bindings help
* tons of fixes


0.11

This minor release is mostly bug fixes and some small features.
I wanted to release a more stable and usable version before I start
hacking on a thread view rewrite.

* renamed config section [tag translate] to [tag-translate]
* docs: more elaborate API docs, INSTALL and USAGE as markdown in github wiki
* more compact header displays in thread view
* command-line history (for one session)
* editor file encoding is now user configurable
* signatures for outgoing mails per account
* optional display of message content in search results
* config option for strftime formating of timestamps
* printing

* fix parse multiline headers from edited tempfile
* fix reply to unusually formated mails (e.g. no recipient)
* fix lots of encoding issues
* handle extra wide characters in tag widgets
* fixes in ui.prompt
* fix storing outgoing mails to sent_box
* more liberal header encoding for outgoing mails
* use mimetype lib to guess right content-type of attachments
